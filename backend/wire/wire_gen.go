// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"BrawlPicks/app"
	"BrawlPicks/controllers"
	"BrawlPicks/internal/ctx"
	"BrawlPicks/internal/env"
	"BrawlPicks/repositories"
	"BrawlPicks/routes"
	"BrawlPicks/services"
	"BrawlPicks/wire/providers"
)

// Injectors from app.go:

func InitializeApp(envEnv *env.Env) (*app.App, error) {
	context := ctx.GetGracefulShutdownCtx()
	swaggerRoute := providers.NewSwaggerRoute(envEnv)
	client := providers.NewHttpClient()
	mapRankingRepository := repositories.NewMapRankingRepository(envEnv)
	mapRankingDataService := services.NewMapRankingDataService(envEnv, client, mapRankingRepository)
	mapRankingController := controllers.NewMapRankingController(mapRankingDataService)
	mapRankingRoute := routes.NewMapRankingRoute(mapRankingController)
	api := providers.NewApi(envEnv, context, swaggerRoute, mapRankingRoute)
	appApp := app.NewApp(api)
	return appApp, nil
}

// Injectors from map_ranking.go:

func InitializeMapRankingRoute(controller *controllers.MapRankingController) *routes.MapRankingRoute {
	mapRankingRoute := routes.NewMapRankingRoute(controller)
	return mapRankingRoute
}

func InitializeMapRankingController(sv services.MapRankingDataServiceInterface) *controllers.MapRankingController {
	mapRankingController := controllers.NewMapRankingController(sv)
	return mapRankingController
}

func InitializeMapRankingService(e *env.Env, repo repositories.MapRankingRepositoryInterface) *services.MapRankingDataService {
	client := providers.NewHttpClient()
	mapRankingDataService := services.NewMapRankingDataService(e, client, repo)
	return mapRankingDataService
}

func InitializeMapRankingRepository(e *env.Env) *repositories.MapRankingRepository {
	mapRankingRepository := repositories.NewMapRankingRepository(e)
	return mapRankingRepository
}
